import{_ as t,r as i,o as p,a as l,b as a,d as n,w as s,F as r,e,c}from"./app.53be1ff4.js";const d={},u=a("h1",{id:"webhooks",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#webhooks","aria-hidden":"true"},"#"),e(" Webhooks")],-1),h=a("p",null,[e("Whispr also provides a webhook system. Webhooks are event listeners that will make a "),a("code",null,"POST"),e(" call to a url you provided, when an event is triggered.")],-1),k=a("h2",{id:"webhook-registration",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#webhook-registration","aria-hidden":"true"},"#"),e(" Webhook registration")],-1),b=e("You can use "),v=e("GraphQL"),_=e(" or "),m=e("REST"),w=e(" to create or delete a webhook."),y=c(`<p>To create a webhook, you should provide:</p><ul><li>the url that will be called when the event is triggered</li><li>the event names the webhook will be listening to</li><li>(optional) the filter on the event if you want to be notified only for events of a specific payload</li></ul><p>For example, here is the payload you should provide to create a webhook that will call <code>https://webhook.url</code> when a whisp is created and that whisp applicationId is &quot;application1&quot;.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;https://webhook.url&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;events&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;WHISP_CREATED&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;filter&quot;</span><span class="token operator">:</span>  <span class="token punctuation">{</span> <span class="token property">&quot;applicationId&quot;</span><span class="token operator">:</span> <span class="token string">&quot;application1&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="webhook-call" tabindex="-1"><a class="header-anchor" href="#webhook-call" aria-hidden="true">#</a> Webhook call</h2><p>The call a webhook makes to the url you provided is a <code>POST</code> with the event name and event payload as body.</p><p>In the case of our example above, it would be:</p><p><code>POST</code>: <code>https://webhook.url</code></p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
    <span class="token property">&quot;eventName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;WHISP_CREATED&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> whispEntity
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="webhook-proxy-ca" tabindex="-1"><a class="header-anchor" href="#webhook-proxy-ca" aria-hidden="true">#</a> Webhook proxy / CA</h3><p>In order to use a proxy set the <code>HTTP_PROXY</code> or <code>HTTPS_PROXY</code> environment variables.</p><p>You can pass a custom <code>CA_CERTIFICATE</code> by setting the variable. It can contains the path to one or multiple certificates in the Docker File, separated by comma.</p>`,12);function g(q,f){const o=i("RouterLink");return p(),l(r,null,[u,h,k,a("p",null,[b,n(o,{to:"/api/graphql.html#Webhooks:_Mutation"},{default:s(()=>[v]),_:1}),_,n(o,{to:"/api/rest.html#Create_a_Webhook"},{default:s(()=>[m]),_:1}),w]),y],64)}var T=t(d,[["render",g],["__file","index.html.vue"]]);export{T as default};
