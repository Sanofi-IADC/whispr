import{_ as n,c as s}from"./app.434e6053.js";const a={},e=s(`<h1 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h1><h2 id="setup-with-docker" tabindex="-1"><a class="header-anchor" href="#setup-with-docker" aria-hidden="true">#</a> Setup with Docker</h2><p>Requirements:</p><ul><li>Have Docker installed</li></ul><h3 id="configuration" tabindex="-1"><a class="header-anchor" href="#configuration" aria-hidden="true">#</a> Configuration</h3><p>Whispr is configured thanks to environment variables in <code>docker-compose.yml</code>. You can leave the default values for development.</p><h3 id="initialize-the-containers" tabindex="-1"><a class="header-anchor" href="#initialize-the-containers" aria-hidden="true">#</a> Initialize the containers</h3><h4 id="quickstart" tabindex="-1"><a class="header-anchor" href="#quickstart" aria-hidden="true">#</a> Quickstart</h4><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker-compose</span> up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>This spins up whispr, a mongoDB, redis and a localstack environment with an s3 instance.</p><p>Nothing to configure, easy to use</p><h4 id="quickstart-for-developers" tabindex="-1"><a class="header-anchor" href="#quickstart-for-developers" aria-hidden="true">#</a> Quickstart for developers</h4><p>Start mongoDB, redis and localstack environment dockers with an s3 instance and ports exposed to your development machine</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker-compose</span> -f docker-compose.dev.yml up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Install node packages then run the project in watch mode</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span>
$ <span class="token function">npm</span> run start:dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="using-mongodb-replicatsets" tabindex="-1"><a class="header-anchor" href="#using-mongodb-replicatsets" aria-hidden="true">#</a> Using MongoDB Replicatsets</h4><p>If you want to use mongoDB replicasets use <code>docker-compose.rep.yml</code> or <code>docker-compose.dev.rep.yml</code></p><p>Both include two mongoDB instances which need to be connected on the first startup.</p><p>On the first start up you need to open a bash and type in the following</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker-compose</span> -f docker-compose.rep.yml up <span class="token punctuation">(</span>or <span class="token function">docker-compose</span> -f docker-compose.dev.rep.yml up<span class="token punctuation">)</span>
$ <span class="token function">docker</span> <span class="token builtin class-name">exec</span> -it localmongo1 mongo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Once in the mongoshell, run the following command to initiate the cluster.</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">initiate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token string">&quot;rs0&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">members</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;mongo1:27017&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;mongo2:27017&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

exit<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Localstack</p><p><code>docker-compose.rep.yml</code> and <code>docker-compose.dev.rep.yml</code> don&#39;t include a localstack instance. But these can easily be added</p></div><h3 id="running-the-app" tabindex="-1"><a class="header-anchor" href="#running-the-app" aria-hidden="true">#</a> Running the app</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">docker-compose</span> up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="installation-without-docker" tabindex="-1"><a class="header-anchor" href="#installation-without-docker" aria-hidden="true">#</a> Installation without Docker</h2><h3 id="install-the-whispr-node-application" tabindex="-1"><a class="header-anchor" href="#install-the-whispr-node-application" aria-hidden="true">#</a> Install the whispr node application</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>$ <span class="token function">npm</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="install-redis" tabindex="-1"><a class="header-anchor" href="#install-redis" aria-hidden="true">#</a> Install Redis:</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> upgrade
<span class="token function">apt</span> <span class="token function">install</span> redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">Troubleshooting : Windows</p><p>On Windows you have to install WSL Ubuntu before running the install commands</p></div><p>Then start the server</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>redis-server
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="initialize-mongodb-as-a-cluster" tabindex="-1"><a class="header-anchor" href="#initialize-mongodb-as-a-cluster" aria-hidden="true">#</a> Initialize MongoDB as a cluster:</h3><p>Install current version of MongoDB from: https://www.mongodb.com/download-center/.</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># In an elevated cmd:</span>
<span class="token builtin class-name">cd</span> C:<span class="token punctuation">\\</span>Program Files<span class="token punctuation">\\</span>MongoDB<span class="token punctuation">\\</span>Server<span class="token punctuation">\\</span><span class="token number">4.2</span><span class="token punctuation">\\</span>bin
<span class="token function">mkdir</span> .<span class="token punctuation">\\</span>srv<span class="token punctuation">\\</span>mongodb<span class="token punctuation">\\</span>rs0-0<span class="token punctuation">;</span>
<span class="token function">mkdir</span> .<span class="token punctuation">\\</span>srv<span class="token punctuation">\\</span>mongodb<span class="token punctuation">\\</span>rs0-1<span class="token punctuation">;</span>
mongod --replSet rs0 --port <span class="token number">27017</span> --bind_ip localhost --dbpath ./srv/mongodb/rs0-0
mongod --replSet rs0 --port <span class="token number">27018</span> --bind_ip localhost --dbpath ./srv/mongodb/rs0-1

<span class="token comment"># Connect to the first replicaset:</span>
mongo --port <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>In the mongo shell Create the following config:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>rsconf <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token string">&quot;rs0&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">members</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
      <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;localhost:27017&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
      <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&quot;localhost:27018&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

rs<span class="token punctuation">.</span><span class="token function">initiate</span><span class="token punctuation">(</span>rsconf<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For all later startups of the database:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># In an elevated cmd or create a .bat File:</span>
start cmd.exe /k <span class="token string">&quot;cd C:\\Program Files\\MongoDB\\Server<span class="token entity" title="\\4">\\4</span>.2<span class="token entity" title="\\b">\\b</span>in &amp; mongod --replSet rs0 --port 27017 --bind_ip localhost --dbpath ./srv/mongodb/rs0-0&quot;</span>

start cmd.exe /k <span class="token string">&quot;cd C:\\Program Files\\MongoDB\\Server<span class="token entity" title="\\4">\\4</span>.2<span class="token entity" title="\\b">\\b</span>in &amp; mongod --replSet rs0 --port 27018 --bind_ip localhost --dbpath ./srv/mongodb/rs0-1&quot;</span>

start cmd.exe /k <span class="token string">&quot;wsl redis-server&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-a-file-named-local-env-in-the-project-root-folder" tabindex="-1"><a class="header-anchor" href="#create-a-file-named-local-env-in-the-project-root-folder" aria-hidden="true">#</a> Create a file named &#39;local.env&#39; in the project root folder:</h3><p>To configure the application, you need to provide a <code>local.env</code> file.</p><p>You can create your <code>local.env</code> file from the <code>example.env</code> file. Most of the configuration is already done, however you will need to change the following lines.</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>MONGOOSE_HOST = localhost
MONGOOSE_HOST_READ = localhost
MONGOOSE_PORT = 27017
MONGOOSE_PORT_READ = 27018

REDIS_HOST = localhost
REDIS_HOST_READ = localhost
WHISPR_AUTH_CONFIG_SECRET = (change to your auth server - see [Security](./security.md))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="setup-a-local-aws-instance-with-localstack-optional" tabindex="-1"><a class="header-anchor" href="#setup-a-local-aws-instance-with-localstack-optional" aria-hidden="true">#</a> Setup a local AWS instance with localstack (optional)</h3><p>If you want to work with a local file storage instead of AWS use this:</p><ul><li>Install Docker: https://www.docker.com/products/docker-desktop</li><li>Install Python: https://www.python.org/downloads/</li><li>Install Localstack: https://github.com/localstack/localstack</li><li>Install AWS CLI: https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html</li></ul><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># run the following parts in different shells</span>
localstack start
<span class="token comment"># wait until the first command is finished</span>
aws --endpoint-url<span class="token operator">=</span>http://localhost:4572 s3 mb s3://demo-bucket
aws --endpoint-url<span class="token operator">=</span>http://localhost:4572 s3api put-bucket-acl --bucket demo-bucket --acl public-read
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Add to your <code>local.env</code></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>AWS_S3_ENDPOINT <span class="token operator">=</span> http://localhost:4572/
AWS_BUCKET_NAME <span class="token operator">=</span> demo-bucket
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Switch to Node 12 (required for some file upload dependencies)</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># Setting Node version</span>
nvm <span class="token function">install</span> <span class="token number">16.14</span>.0

<span class="token comment"># Check the node version is correctly set, must be 16.14.0</span>
<span class="token function">node</span> -v
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Export/set dummy environment variables for local stack (required to run tests)</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># Mac/Linux
export AWS_ACCESS_KEY_ID=dummy
export AWS_SECRET_ACCESS_KEY=dummy

# or Windows
set AWS_ACCESS_KEY_ID=dummy
set AWS_SECRET_ACCESS_KEY=dummy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="running-the-app-1" tabindex="-1"><a class="header-anchor" href="#running-the-app-1" aria-hidden="true">#</a> Running the app</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># development</span>
$ <span class="token function">npm</span> run start

<span class="token comment"># watch mode</span>
$ <span class="token function">npm</span> run start:dev

<span class="token comment"># production mode</span>
$ <span class="token function">npm</span> run start:prod
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,57);function t(i,o){return e}var c=n(a,[["render",t],["__file","installation.html.vue"]]);export{c as default};
